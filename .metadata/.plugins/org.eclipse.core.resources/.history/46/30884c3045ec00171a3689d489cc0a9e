package com.csdn.text;

import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

/**
 * 创建两个线程，其中一个输出1-52，另外一个输出A-Z。输出格式要求：12A 34B 56C 78D
 * 
 * @author Administrator
 *
 */
public class Demo2 {

	public static void main(String[] args) {
		
	}
}
/**
 * 数字类
 * @author Administrator
 *
 */
class S implements Runnable{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
	
}
/**
 * 字母类
 * @author Administrator
 *
 */
class Z implements Runnable{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
	
}

/**
 * 资源类
 * @author Administrator
 *
 */
class Resource{
	private int s = 0;
	private int z = 65;
	private Lock lock = new ReentrantLock();
	private Condition condition_s = lock.newCondition();
	private Condition condition_n = lock.newCondition();
	public void inS(String name) {
		lock.lock();
		switch (name) {
		case "00":
			if (s<53) {
				System.out.println(s++);
			}
		case "AA":
			if (z<91) {
				
				System.out.println((char)z++);
			}

		default:
			break;
		}
	}
}












