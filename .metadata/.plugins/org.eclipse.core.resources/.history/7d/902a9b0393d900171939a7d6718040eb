package com.zgcxueyuan.free;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;

public class DateUtil {
	/**
	 * 实例化方法： 格式化输出日期 toString () addYear(int n ) addMonth(int n) addDar(int n)
	 * getYear() getMonth() getDay() subtract(Date) 返回天
	 * 
	 * 静态方法 getAge(Date) subtract(Date,Date) toString(Date,String)
	 * 
	 * @return
	 */
	// private int year;
	// private int month;
	// private int day;
	private Date mDate;
	Calendar calendar = Calendar.getInstance();
	
	public DateUtil(Date date) {
		mDate = date;
	}

	public DateUtil(long millis) {
		mDate= new Date(millis);
	}

	public DateUtil(String date) throws ParseException {
		DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
		mDate = format.parse(date);
	}



	@SuppressWarnings("deprecation")
	public void addYear(int n) {
		this.mDate.setYear(this.mDate.getYear() + n);
	}

	@SuppressWarnings("deprecation")
	public void addMonth(int n) {
		this.mDate.setMonth(this.mDate.getMonth() + n);
		while (this.mDate.getMonth() > 12) {
			this.mDate.setMonth(this.mDate.getMonth() - 12);
			this.addYear(1);
		}

	}

	@SuppressWarnings("deprecation")
	public void addDay(int n) {
		this.mDate.setDate(getDay() + n);
		while (this.mDate.getDay() > 31) {
			this.mDate.setDate(getDay() - 31);
			this.addMonth(1);
		}
	}
	
	

	public int getYear() {
		calendar.setTime(mDate);
		return calendar.get(Calendar.YEAR);

	}

	public int getMonth() {
		calendar.setTime(mDate);
		return calendar.get(Calendar.MONTH);
	}

	public int getDay() {
		calendar.setTime(mDate);
		return calendar.get(Calendar.DAY_OF_MONTH);
	}

	public int subtract(Date date) {
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(mDate);
		return calendar.get(Calendar.DAY_OF_YEAR);
	}
	public String toString() {

		return null;
	}
}
