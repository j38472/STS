package com.tcp.bxd4;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.URI;
import java.nio.file.FileSystem;
import java.nio.file.LinkOption;
import java.nio.file.Path;
import java.nio.file.WatchEvent.Kind;
import java.nio.file.WatchEvent.Modifier;
import java.nio.file.WatchKey;
import java.nio.file.WatchService;
import java.util.Iterator;

/**
 * 服务端
 * @author Administrator
 *传输文件
 */
public class Server {
	public static void main(String[] args) throws Exception {
		ServerSocket ss = new ServerSocket(10020);
		Socket s = ss.accept();
		String ip = s.getInetAddress().getHostAddress();
		
//		DataInputStream dis = new DataInputStream(s.getInputStream());
//		long over = dis.readLong();
		BufferedReader bufIn = new BufferedReader(new InputStreamReader(s.getInputStream()));
		PrintWriter out = new PrintWriter(new FileWriter("E:\\demo1.txt"),true);
		Path p = new Path() {
			
			@Override
			public URI toUri() {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public Path toRealPath(LinkOption... options) throws IOException {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public File toFile() {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public Path toAbsolutePath() {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public Path subpath(int beginIndex, int endIndex) {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public boolean startsWith(String other) {
				// TODO Auto-generated method stub
				return false;
			}
			
			@Override
			public boolean startsWith(Path other) {
				// TODO Auto-generated method stub
				return false;
			}
			
			@Override
			public Path resolveSibling(String other) {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public Path resolveSibling(Path other) {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public Path resolve(String other) {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public Path resolve(Path other) {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public Path relativize(Path other) {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public WatchKey register(WatchService watcher, Kind<?>[] events, Modifier... modifiers) throws IOException {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public WatchKey register(WatchService watcher, Kind<?>... events) throws IOException {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public Path normalize() {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public Iterator<Path> iterator() {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public boolean isAbsolute() {
				// TODO Auto-generated method stub
				return false;
			}
			
			@Override
			public Path getRoot() {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public Path getParent() {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public int getNameCount() {
				// TODO Auto-generated method stub
				return 0;
			}
			
			@Override
			public Path getName(int index) {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public FileSystem getFileSystem() {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public Path getFileName() {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public boolean endsWith(String other) {
				// TODO Auto-generated method stub
				return false;
			}
			
			@Override
			public boolean endsWith(Path other) {
				// TODO Auto-generated method stub
				return false;
			}
			
			@Override
			public int compareTo(Path other) {
				// TODO Auto-generated method stub
				return 0;
			}
		};
		String line= null;
		while ((line = bufIn.readLine())!=null) {
//			if ("over".equals(line)) {
//				break;
//			}
			out.println(line);
			
		}
		PrintWriter pw = new PrintWriter(s.getOutputStream(),true);
		pw.println("成功");
		out.close();
		s.close();
		ss.close();
	}
}
